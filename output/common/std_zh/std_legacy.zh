//Legacy wrapper functions, for compatibility with old scripts. 
///5th November, 2019

float __stdzh_getVersion() { return STD_VERSION; }
float __stdzh_getVersionDate()
{
	float dt = STD_DATE_MONTH;
	dt += STD_DATE_DAY * 100;
	dt += STD_DATE_YEAR / 10000;
	return dt;
}
float __stdzh_getVersionTime()
{
	float tm = STD_DATE_HOUR;
	tm += STD_DATE_MINUTE / 10000;
	return tm;
}

//Data Handling Functions

//Get the value of any 'indx' in the generic array.
float __stdzh_GetV(int indx)
{
	return std::GlobalRAM[indx];
}

//Set the value of any 'indx', to a specific amount 'value'.
void __stdzh_SetV(int indx, int value)
{
	std::GlobalRAM[indx] = value;
}

//Increase the value of any 'indx' by +1.
void __stdzh_IncV(int indx) 
{
	++std::GlobalRAM[indx];
}

//Increase the value of any 'indx' by 'amount'.
void __stdzh_IncV(int indx, int amount)
{
	std::GlobalRAM[indx] += amount;
}

//Decrease the value of any 'indx' by -1.
void __stdzh_DecV(int indx)
{
	--std::GlobalRAM[indx];
}

//Decrease the value of any 'indx' by 'amount'.
void __stdzh_DecV(int indx, int amount)
{
	std::GlobalRAM[indx] -= amount;
}

//Stores the pointer of any array to an inmdex of GlobalRAM to allow accessing it from any script. 
void __stdzh_StoreArrayPointer(int arr, int indx)
{
	std::GlobalRAM[indx] = arr;
}