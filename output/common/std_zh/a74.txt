//fix
Fixed Link->Jump height.
Further modified ->Step for weapons, and npcs, based on the QR,
	to emulate the prior behaviour.
Delete temporary script data that causes a leak if the user
	cancels out of a compilation.
Fix division by 0 error in zfix.
Fixed bugs in legacy/2.10 quests resulting from flipper/ladder interaction and hammer reach.
Fix combo scripts re-initializing every frame and combodata script crashes.
Fix crashes relating to combo scripts
Fix 'bitmap->Create()' reassigning null
Fix WarpEx ignoring dmap offset when calculating warp return
Fix 'npc->Remove()' not using refvar
Fixed a bug where npc->Step with the rule qr_STEP_IS_FLOAT **DISABLED** 
	was returning wildly incorrect values.
Fixed a bug where old quests were trying to set emulation[qr_STEP_IS_FLOAT],
	not set_bit(quest_rules,qr_STEP_IS_FLOAT).
Fixed a crash reported by ywkls,that when trying to use the
	tile grabber on .qst and .qsu files, where the tile 
	grabber would allow the user to scroll outside the 
	bounds of the .qst tile buffer. 
	It is now clamped to MAXTILEROWS.
Fixed issues where the old system for calculating STEP for sprites from
	scripts produced incorrect values, including slow projectiles and
	breaking ghost.zh sine wave weapons.
Disabled the rule qr_STEP_IS_FLOAT on quest load for quests made before this version.
2.10 Water/Ladder is now set by default on loading a 2.10.x quest.
Made a slight reversion to fix Module>>Ignore.
	This still creates a visual glitch when creating a quest slot
	that uses a quest keyword, however this lasts for only the duration
	of the popup dialogue, and can probably be fixed in the section
	where special quest icons (e.g. 2nd, 3rd, 4th) are loaded.	
	

	

/.imp
Moved the config to ignore internal quests to moduledata, and added
	a menu option to ignore them. This now triggers a popup, but cancel out of
	that popup opens a new popup.
Added functional code for Iron Boots and Step Combos.
	Step Bombos now have a 'Heavy Flag'. They are not triggered unless
	the player has a boots item with the 'Iron' flag enabled.

Allow auto-popup of choose qst dlg on creating new save
Allow auto-popup of choose qst dlg on creating new save
Re-tab title.cpp
Don't allow taking ZC GUI snapshot, with menu open, with wonky colours.
	Use only the tre screen colour with shaded effect.
ZC GUI snapshot (Shift+F12) uses correct ame colours, as long as the
	menu isn't active.
Added a way to detect if the system menu is open (bool MenuOpen).
	This is enabled and disabled exclusively in System() and
	writing to it elsewhere is **unefined**. 
	In theory, alt+tab could call System() to force-pause ZC Player,
	but win32.cpp cannot access System() during its callbacks.
Allow taking a screenshot in ZC that shows the subscreen area
	when the NOSUBSCREEN flag is enabled, by holding the
	ALT key when taking the snapshot.
Preserve the quest colours when taking a GUI snapshot in ZC Player
	unless the user holds the CONTROL key when taking the snapshot.
PreFillTileEditorPage
PreFillComboEditorPage
PreFillMapTilePage
Enable new 'No Scrolling In Air' QR in Modern ruleset
Add QR to prevent scrolling while z>0
Added a ZQE hotkey for '?' that opens the version info display.
Add raft speed modifiers for faster/slower moving raft
Implemented a request from ShadowTiger, whereby when you edit a
	DMap, and select a map tile, when you go to edit further
	DMap map tiles within the same session, the DMap editor will
	remember the last tile that you used. 


//scipt
Added a ZScript Quest Script Instruction Setting:
	sprite->Step is float.
	This preserves values without rounding or truncation.
	Otherwise, ->Step *should* now behave as it always had.
	This should correct issues in older quests where truncation was
	either expected, or the result of user-error.
std.zh v1.7053: Added bool HasHeavyBoots()

Fixed FFScript::getLWeaponByScriptUID(int sUID) and
	FFScript::getEWeaponByScriptUID(int sUID).
	They were iterating based on guys.count() and returning -1
	when they should have been latching onto a weapon UID.
	
Add 'FileSystem->Remove(char32)' and 'file->Remove()
<std 1.7055>
	Added GetMapscreenEFlags(). This is like GetScreenEFlags, but for mapdata.
	Added dmapgrid.zh
	This is a set of helper functions to set or get is a square in the
	passive subscreen minimap is displayed as part of the dungeon when
	the player has a map item, or explores the screen.

	The calcs for dmap offset might be backwards. Untested.
	
Added mapdata->SFlags[] to replicate how Screen->Flags works.
	Added a rule bit (not implemented in GUI) to make reading
	mapdata-Flags work in the same way as SFlags[]
<std> 1.7054 
	Added enum mapscreenflags to std_constants.
	Added GetMapscreenFlag, and SetMapscreenFlag to std_functions.
	Added files (to inspect, and later merge):
		astar.zh: 		AStar algorithm
		infostring.zh: 	Get Info Shop Strings
		nme.zh:		Generic NPC Script
		roomtypes.zh:		Helper function and enum for roomtypes.