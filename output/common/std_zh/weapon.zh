namespace weapons
{
	//Creates and returns an exact copy of the passed LWeapon. Assumes that the passed pointer is valid.
	lweapon Duplicate(eweapon a) 
	{
		lweapon b = Screen->CreateLWeapon(a->ID);
		b->X = a->X;
		b->Y = a->Y;
		b->Z = a->Z;
		b->Jump = a->Jump;
		b->Extend = a->Extend;
		b->TileWidth = a->TileWidth;
		b->TileHeight = a->TileHeight;
		b->HitWidth = a->HitWidth;
		b->HitHeight = a->HitHeight;
		b->HitZHeight = a->HitZHeight;
		b->HitXOffset = a->HitXOffset;
		b->HitYOffset = a->HitYOffset;
		b->DrawXOffset = a->DrawXOffset;
		b->DrawYOffset = a->DrawYOffset;
		b->DrawZOffset = a->DrawZOffset;
		b->Tile = a->Tile;
		b->CSet = a->CSet;
		b->DrawStyle = a->DrawStyle;
		b->Dir = a->Dir;
		b->OriginalTile = a->OriginalTile;
		b->OriginalCSet = a->OriginalCSet;
		b->FlashCSet = a->FlashCSet;
		b->NumFrames = a->NumFrames;
		b->Frame = a->Frame;
		b->ASpeed = a->ASpeed;
		b->Damage = a->Damage;
		b->Step = a->Step;
		b->Angle = a->Angle;
		b->Angular = a->Angular;
		b->CollDetection = a->CollDetection;
		b->DeadState = a->DeadState;
		b->Flash = a->Flash;
		b->Flip = a->Flip;
		for (int i = 0; i < 32; ++i)
			b->Misc[i] = a->Misc[i];
		b->ID = a->ID;
		b->ScriptTile = a->ScriptTile;
		b->ScriptFlip = a->ScriptFlip;
		b->Animation = a->Animation;
		//b->Parent = a->Parent;
		b->Level = a->Level;
		b->Script = a->Script;
		//b->Weapon = a->Weapon;
		//b->Defense = a->Defense;
		b->Level = a->Level;
		for ( int q = 0; q < 8; ++q ) b->InitD[q] = a->InitD[q];
		return b;
	}

	//Creates and returns an exact copy of the passed EWeapon. Assumes that the passed pointer is valid.
	eweapon Duplicate(lweapon a) 
	{
		eweapon b = Screen->CreateEWeapon(a->ID);
		b->X = a->X;
		b->Y = a->Y;
		b->Z = a->Z;
		b->Jump = a->Jump;
		b->Extend = a->Extend;
		b->TileWidth = a->TileWidth;
		b->TileHeight = a->TileHeight;
		b->HitWidth = a->HitWidth;
		b->HitHeight = a->HitHeight;
		b->HitZHeight = a->HitZHeight;
		b->HitXOffset = a->HitXOffset;
		b->HitYOffset = a->HitYOffset;
		b->DrawXOffset = a->DrawXOffset;
		b->DrawYOffset = a->DrawYOffset;
		b->DrawZOffset = a->DrawZOffset;
		b->Tile = a->Tile;
		b->CSet = a->CSet;
		b->DrawStyle = a->DrawStyle;
		b->Dir = a->Dir;
		b->OriginalTile = a->OriginalTile;
		b->OriginalCSet = a->OriginalCSet;
		b->FlashCSet = a->FlashCSet;
		b->NumFrames = a->NumFrames;
		b->Frame = a->Frame;
		b->ASpeed = a->ASpeed;
		b->Damage = a->Damage;
		b->Step = a->Step;
		b->Angle = a->Angle;
		b->Angular = a->Angular;
		b->CollDetection = a->CollDetection;
		b->DeadState = a->DeadState;
		b->Flash = a->Flash;
		b->Flip = a->Flip;
		for (int i = 0; i < 32; ++i)
			b->Misc[i] = a->Misc[i];
		b->ID = a->ID;
		b->ScriptTile = a->ScriptTile;
		b->ScriptFlip = a->ScriptFlip;
		b->Animation = a->Animation;
		//b->Parent = a->Parent;
	//	b->Level = a->Level;
		b->Script = a->Script;
		b->Level = a->Level;
		//b->Weapon = a->Weapon;
		//b->Defense = a->Defense;
		for ( int q = 0; q < 8; ++q ) b->InitD[q] = a->InitD[q];
		return b;
	}
}